% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/screen.R
\name{screen}
\alias{screen}
\alias{height_screen}
\alias{abo_screen}
\alias{pra_screen}
\alias{count_screen}
\alias{las_dist_calc}
\alias{dist_calc}
\alias{las_offer_rank}
\alias{cas_offer_rank}
\title{Screen Candidates and Donors for Compatability}
\usage{
height_screen(cands, dons)

abo_screen(cands, dons)

pra_screen(cands, dons)

count_screen(cands, dons)

las_dist_calc(cands, dons)

dist_calc(cands, dons)

las_offer_rank(..., overall_ranking)

cas_offer_rank(..., overall_ranking, efficiency_weight = 0.1)
}
\arguments{
\item{cands}{tibble of candidates}

\item{dons}{tibble of donors}

\item{...}{tibbles of screening conditions, height, blood, pra, distance, etc}

\item{overall_ranking}{tibble containing overall ranking by candidate}

\item{efficiency_weight}{weight of efficiency for distance between candidate and donor}
}
\value{
a dataset containing compatible donors and candidates based on specific criteria

a dataset of all comparable matches and their respective rankings
}
\description{
These functions screen for compatible candidtes and donors.
}
\details{
\code{height_screen} screens compatible donors and candidates based on acceptable height ranges.

\code{abo_screen} screens donors and compabitle donors based on blood type

\code{pra_screen} not yet implemented will screen on pra compabitability organs

\code{count_screen} Makes sure double lung transplant are matched with double lung donors, singles can be matched and received a one of the double lung

\code{las_dist_calc} Returns the distance between the matched candidates and donors with las distance categories.

Matching rules for LAS distances are broken into the following zones, 250 nautical miles, 500, 1000, 1500, 2500, the US
}
\examples{
cands <- gen_and_spawn_candidates(days = 100)
dons <- gen_and_spawn_donors(days = 2)

height_match <- height_screen(cands, dons)
abo_match <- abo_screen(cands, dons)
pra_match <- pra_screen(cands, dons)
count_match <- count_screen(cands, dons)
las_dists <- las_dist_calc(cands, dons)
cas_dists <- dist_calc(cands, dons)
las_rank <- calculate_las(cands, wl_model = "LAS15", post_tx_model = "LAS15", wl_cap = 365, post_tx_cap = 365, wl_weight = 2, post_tx_weight = 1)
las_offers <- las_offer_rank(height_match, abo_match, count_match, pra_match, las_dists, overall_ranking = las_rank)
cas_rank <- calculate_cas_nodist(cands, wl_model = "CAS23", post_tx_model = "CAS23", wl_weight = 0.25, post_tx_weight = 0.25, bio_weight = 0.15, pld_weight = 0.05, peds_weight = 0.2)
cas_offers <- cas_offer_rank(height_match, abo_match, count_match, pra_match, cas_dists, overall_ranking = cas_rank)
}
